# -*- coding: utf-8 -*-
"""qseudo matrix.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZNlslv_6JBPxwlw17Wkw2GMrqHElbaOv

<img src = "/content/drive/MyDrive/Uclass/Basicdatamath/14./Untitled0.ipynb" height = 300 width = 300>

solve을 이용한 방법하여 transpose matrix 구하기
"""

import numpy as np
A = np.array([[2, 3], [5, 6]])
B = np.array([4, 5])
C = np.linalg.solve(A, B)
print(C)

"""예제)"""

import numpy as np
A = np.array([[-2, -5, 2 ], [1, 3, 0], [0, 1, 3]])
B = np.array([-3, 4, 6])
C = np.linalg.solve(A, B)
print(C)

"""역행열을 이용해 transpose matrix 구하기

"""

import numpy as np
A = np.array([[2, 3], [5, 6]])
B = np.array([4, 5])
C = np.linalg.inv(A)
D = np.dot(C, B)
print(D)

"""예제2)"""

import numpy as np

A = np.array([[2, 3], [5, 6]])

D = np.transpose(A)  # D = A의  trainspose matrix
B = np.dot(D,A)      # B = A의 trainspose matrix * A
C = np.linalg.inv(B) # C = B의 trainspose matrix
print(D)
print(B)
print(C)

AP = np.dot(C,D)
print(AP)

"""예제3) AP = pseudoinverse matrix"""

import numpy as np

A = np.array([[1,1], [2,1],[3,1]])

D = np.transpose(A)  # D = A의  trainspose matrix
B = np.dot(D,A)      # B = A의 trainspose matrix * A
C = np.linalg.inv(B) # C = B의 trainspose matrix
AP = np.matmul(C,D)

print(AP)

"""예제4) AP * E(B)"""

from numpy.linalg.linalg import transpose
import numpy.linalg as lin
a = np.array([[1,1,1,1],
             [8,4,2,1],
             [27,9,3,1],
             [64,16,4,1],
             [125,25,5,1],
             [216,36,6,1]])

b = np.array([2.1,3.5,4.2,3.1,4.4,6.8])

D = transpose(a)
B = np.dot(D,a)
C = lin.inv(B)
AP = np.matmul(C,D)
print("Pseudo Matrix : ", AP)
E = np.dot(AP,b)
print("Answer : ", E)

"""pseudoinverse matrix과 inverse matrix 차이 알아보기"""

import numpy as np

A = np.array([[1, -1, 1],
              [-1, 1, 1],
              [1, 1, -1],
              [1, 1, 1]])

D = np.transpose(A)  # D = A의  trainspose matrix
B = np.dot(D,A)      # B = A의 trainspose matrix * A
C = np.linalg.inv(B) # C = B의 trainspose matrix
AP = np.matmul(C,D)

print(AP)