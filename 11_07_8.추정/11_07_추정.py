# -*- coding: utf-8 -*-
"""11.07_추정.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XeVbW4l3gHoU8gD_57U03m4g1L71Y1at
"""

import numpy as np
import pandas as pd
from scipy.stats import norm
import scipy as sp
import matplotlib.pyplot as plt
import math

"""pmf 확률질량함수(probability mass funcrion)

pdf 확률밀도합수((probability densiy function)

cdf 누적분포함수(cumulctive distribution funtion)

ppf 누적분포함수의 역함수(inverse cumulctive distribution function)

sf 생존 함수(survival function) = 1-누적분포함수

isf 생존함수의 역합수(incerse survival function)

rvs 랜던 표본 생성(random variable sampling)
"""

rv = sp.stats.norm(100,12) #퍙군, 표준편차
print(rv)
x = np.linspace(-50, 150, 100) #동일한 간격으로 15, 5까지 100개를 생성
y1 = rv.pdf(x)
plt.plot(x, y1)
plt.show()

rv = sp.stats.norm(0,1)
y1 = rv.pdf(x)
plt.figure(figsize=(10, 6))
plt.plot(x, y1, color = 'r')
plt.xlabel('x')
plt.ylabel('y')
plt.grid()
plt.title('Norma; Distribution with scipy.stats')
plt.legend(['N()0. 1'])
plt.show()

import numpy as np
import matplotlib.pyplot as plt
import scipy as scipy
import scipy.stats
 
def show_pdfcdf(rv, m,s):
  mm = m
  ss = 6 * s
  xx = np.linspace(mm-ss, mm + ss, 200)
  pdf = rv.pdf(xx)
  cdf = rv.cdf(xx)

  plt.grid(True)
  plt.plot(xx, pdf)
  plt.plot(xx, cdf)
  plt.title(f'Norm(m={m}, s^2={s*s: 3f} Pdf & Cdf')
  plt.savefig('dist.png')
  plt.show()

m, s = 30, np.sqrt(16)
rv = sp.stats.norm(m, s) 

show_pdfcdf(rv, m, s)

x1 = 22
print(f'Prob ({x1}) =',rv.cdf(x1))

m, s = 30, np.sqrt(16)
rv = sp.stats.norm(m, s) 

show_pdfcdf(rv, m, s)

x1, x2 = 25, 35
print(f'Prob ({x1}) =',rv.cdf(x1))
print(f'Prob ({x2}) =',rv.cdf(x2))
print(f'Prob ({x1}< x < {x2}) =', rv.cdf(x2)-rv.cdf(x1))

m, s = 180*1/6, np.sqrt(180*1/6*5/6)
rv = sp.stats.norm(m, s) 

show_pdfcdf(rv, m, s)

x1, x2 = 35, 50
print(f'Prob ({x1}) =',rv.cdf(x1))
print(f'Prob ({x2}) =',rv.cdf(x2))
print(f'Prob ({x1}< x < {x2}) =', rv.cdf(x2)-rv.cdf(x1))

m, s = 2, np.sqrt(9)
rv = sp.stats.norm(m, s) 

show_pdfcdf(rv, m, s)

x1, x2 = 2, 8
print(f'Prob ({x1}) =',rv.cdf(x1))
print(f'Prob ({x2}) =',rv.cdf(x2))
print(f'Prob ({x1}< x < {x2}) =', rv.cdf(x2)-rv.cdf(x1))

m, s = 2, np.sqrt(9)
rv = sp.stats.norm(m, s) 

show_pdfcdf(rv, m, s)

x2 = -1
print(f'Prob ({x2}) =',rv.cdf(x2))
print(f'Prob (x <= {x2}) =', rv.cdf(x2))

#신뢰도 구간