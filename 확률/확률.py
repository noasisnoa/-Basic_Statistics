# -*- coding: utf-8 -*-
"""확률.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/130vASQRKgnpe7pphwMPTJDCY-T6Dvfiz
"""

!python  --version

!wget https://www.python.org/ftp/python/3.9.9/Python-3.9.9.tgz
!tar xvfz Python-3.9.9.tgz
!Python-3.9.9/configure
!make
!sudo make install

!python  --version

"""# DICE P"""

import math

def combination_count(n, r):
  return math.factorial(n) // math.factorial(n -r)*math.factorial(r)

S = combination_count(7, 3)
A = combination_count(4, 2)*combination_count(3, 1)
P = A/S
print(P)

"""# DICE_P2"""

def n(event):
  return len(event)

n(S)

S = {1, 2, 3, 4, 5, 6}
print(len(S))

A = {2, 3, 6}
B = {5, 6}

P = n(A)/n(S)
print(P)

"""## 예제 8-16"""

C = {1, 2}
D = {5, 6}
CD = {}

P1 = n(C)/n(S)
P2 = n(D)/n(S)
P3 = n(CD)/n(S)

P = P1+P2-P3
print(P)

"""# 예제 8-17"""

S = combination_count(15, 2)
A = combination_count(8, 2)
Pc = 1 - A/S
print(Pc)

S = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
B = [1,3,5,7,9,11,13,15]

from itertools import combinations

print(list(combinations(S, 2)))
print(len(list(combinations(S, 2))))

print(list(combinations(B, 2)))
print(len(list(combinations(B, 2))))

P = ( len(list(combinations(S, 2)))/len(list(combinations(B, 2))) )
print(P)

Pc = 1 - P
print(Pc)